// Testing my contacts API

### Get all contacts
GET http://localhost:3000/contacts

### Get one contact by ID 
GET http://localhost:3000/contacts/507f1f77bcf86cd799439011

### Create new contact
POST http://localhost:3000/contacts
Content-Type: application/json

{
  "firstName": "John",
  "lastName": "Doe", 
  "email": "john.doe@example.com",
  "favoriteColor": "Blue",
  "birthday": "1990-01-01"
}

### Update existing contact
PUT http://localhost:3000/contacts/{{contactId}}
Content-Type: application/json

{
  "firstName": "Jane",
  "lastName": "Doe",
  "email": "jane.doe@example.com", 
  "favoriteColor": "Red",
  "birthday": "1992-02-02"
}

### Delete contact
DELETE http://localhost:3000/contacts/{{contactId}}

### Invalid ID format
GET http://localhost:3000/contacts/invalid-id

### Create invalid (fails schema validation)
POST http://localhost:3000/contacts
Content-Type: application/json

{
  "firstName": "A",
  "lastName": "B",
  "email": "not-an-email",
  "favoriteColor": "",
  "birthday": "3020-01-01"
}

### Create valid (for duplicate test)
POST http://localhost:3000/contacts
Content-Type: application/json

{
  "firstName": "Ada",
  "lastName": "Lovelace",
  "email": "ada@example.com",
  "favoriteColor": "blue",
  "birthday": "1815-12-10"
}

### Duplicate email should 409
POST http://localhost:3000/contacts
Content-Type: application/json

{
  "firstName": "Another",
  "lastName": "Person",
  "email": "ada@example.com",
  "favoriteColor": "green",
  "birthday": "1990-01-01"
}

### Patch with invalid data
PATCH http://localhost:3000/contacts/{{contactId}}
Content-Type: application/json

{
  "email": "not-an-email"
}
